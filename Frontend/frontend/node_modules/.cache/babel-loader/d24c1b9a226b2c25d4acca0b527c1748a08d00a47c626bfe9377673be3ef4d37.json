{"ast":null,"code":"var _jsxFileName = \"/Users/manaszagade/Desktop/Finalytics/Frontend/frontend/src/App.js\";\nimport './App.css';\nimport Homepage from './Homepage';\nimport BankConnect from './Bank/BankConnect';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(BankConnect, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"https://cdn.teller.io/connect/connect.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n        children: document.addEventListener(\"DOMContentLoaded\", function () {\n          var tellerConnect = TellerConnect.setup({\n            applicationId: \"app_p1klv808m9jtuv6a7c000\",\n            onInit: function () {\n              console.log(\"Teller Connect has initialized\");\n            },\n            // Part 3. Handle a successful enrollment's accessToken\n            onSuccess: function (enrollment) {\n              console.log(\"User enrolled successfully\", enrollment.accessToken);\n            },\n            onExit: function () {\n              console.log(\"User closed Teller Connect\");\n            }\n          });\n\n          // Part 4. Hook user actions to start Teller Connect\n          var el = document.getElementById(\"teller-connect\");\n          el.addEventListener(\"click\", function () {\n            tellerConnect.open();\n          });\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Homepage","BankConnect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","document","addEventListener","tellerConnect","TellerConnect","setup","applicationId","onInit","console","log","onSuccess","enrollment","accessToken","onExit","el","getElementById","open","_c","$RefreshReg$"],"sources":["/Users/manaszagade/Desktop/Finalytics/Frontend/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport Homepage from './Homepage';\n\nimport BankConnect from './Bank/BankConnect';\n\n\n\nfunction App() {\n  return (\n\n    <><div className=\"App\">\n      {/*<Homepage isregister={false}/>*/}\n\n\n      <BankConnect />\n\n    </div><>\n        <script src=\"https://cdn.teller.io/connect/connect.js\"></script>\n        <script>\n      {\n      \n      document.addEventListener(\"DOMContentLoaded\", function() {\n        var tellerConnect = TellerConnect.setup({\n          applicationId: \"app_p1klv808m9jtuv6a7c000\",\n          onInit: function() {\n            console.log(\"Teller Connect has initialized\");\n          },\n          // Part 3. Handle a successful enrollment's accessToken\n          onSuccess: function(enrollment) {\n            console.log(\"User enrolled successfully\", enrollment.accessToken);\n          },\n          onExit: function() {\n            console.log(\"User closed Teller Connect\");\n          }\n        });\n\n        // Part 4. Hook user actions to start Teller Connect\n        var el = document.getElementById(\"teller-connect\");\n        el.addEventListener(\"click\", function() {\n          tellerConnect.open();\n        });\n      })\n\n      }\n\n    </script>\n\n      </></>\n\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,YAAY;AAEjC,OAAOC,WAAW,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAI7C,SAASC,GAAGA,CAAA,EAAG;EACb,oBAEEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBAAEJ,OAAA;MAAKK,SAAS,EAAC,KAAK;MAAAD,QAAA,eAIpBJ,OAAA,CAACF,WAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEZ,CAAC,eAAAT,OAAA,CAAAE,SAAA;MAAAE,QAAA,gBACFJ,OAAA;QAAQU,GAAG,EAAC;MAA0C;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eAChET,OAAA;QAAAI,QAAA,EAGFO,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;UACvD,IAAIC,aAAa,GAAGC,aAAa,CAACC,KAAK,CAAC;YACtCC,aAAa,EAAE,2BAA2B;YAC1CC,MAAM,EAAE,SAAAA,CAAA,EAAW;cACjBC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;YAC/C,CAAC;YACD;YACAC,SAAS,EAAE,SAAAA,CAASC,UAAU,EAAE;cAC9BH,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEE,UAAU,CAACC,WAAW,CAAC;YACnE,CAAC;YACDC,MAAM,EAAE,SAAAA,CAAA,EAAW;cACjBL,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;YAC3C;UACF,CAAC,CAAC;;UAEF;UACA,IAAIK,EAAE,GAAGb,QAAQ,CAACc,cAAc,CAAC,gBAAgB,CAAC;UAClDD,EAAE,CAACZ,gBAAgB,CAAC,OAAO,EAAE,YAAW;YACtCC,aAAa,CAACa,IAAI,CAAC,CAAC;UACtB,CAAC,CAAC;QACJ,CAAC;MAAC;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAII,CAAC;IAAA,eAEL,CAAC;EAAA,eAAE,CAAC;AAGZ;AAACkB,EAAA,GA3CQxB,GAAG;AA6CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}